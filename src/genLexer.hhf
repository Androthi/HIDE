/*
genLexer.hhf
	This include file provides definitions for all the
	token constants corresponding to reserved words
	as defined in the gen definition file

	Note: This file is generated by machine.  Do not modify this
	file by hand.  If you want to add or change reserved
	words, please make modifications to the original definitions
	file and run it through gen to produce new output files.
*/

procedure genLex ( Cursor:dword in esi); @external;
procedure genExtract; @external;
procedure genSkipWS; @external;
procedure genCheckRW ( src:dword in esi ); @external;
procedure checkKW ( src:string); @returns ("EAX"); @external;
procedure checkSA ( src:string); @returns ("EAX"); @external;

#macro funcstr (str, start, len): chrIndex, chrLen, chrVal;
	?chrIndex := start;
	?chrVal := 0;
	?chrLen := len;
	#while( chrLen > 0 )
		?chrVal := chrVal +	uns8( char( @substr( str, chrIndex, 1 ))) << ((chrLen-1) * 8 );
		?chrLen := chrLen - 1;
		?chrIndex := chrIndex + 1;
	#endwhile
	chrVal
#endmacro;

static
	genLine		:uns32; @external;
	genID		:string; @external;
	genlcID		:string; @external;
	genGoodID		:cset; @external;
	genEOF		:dword; @external;
	genNumber	:dword; @external;
	genReal		:real64; @external;

const

	// gen.exe reserved words
	gen_error		:= $0;
	gen_eof			:= $1;
	gen_id			:= $2;
	gen_number		:= $3;
	gen_backslash	:= $4;
	gen_grave		:= $5;
	gen_del			:= $6;
	gen_question	:= $7;
	gen_minus		:= $8;
	gen_plus		:= $9;
	gen_asterisk	:= $10;
	gen_lparen		:= $11;
	gen_semicolon	:= $12;
	gen_lbracket	:= $13;
	gen_lbrace		:= $14;
	gen_comma		:= $15;
	gen_dollar		:= $16;
	gen_percent		:= $17;
	gen_slash		:= $18;
	gen_vertbar		:= $19;
	gen_caret		:= $20;
	gen_amper		:= $21;
	gen_colon		:= $22;
	gen_period		:= $23;
	gen_equal		:= $24;
	gen_exclaim		:= $25;
	gen_greater		:= $26;
	gen_less		:= $27;
	gen_rbrace		:= $28;
	gen_rparen		:= $29;
	gen_underscore	:= $30;
	gen_tilde		:= $31;
	gen_atsign		:= $32;
	gen_pound		:= $33;
	gen_quote		:= $34;
	gen_apost		:= $35;
	gen_rbracket	:= $36;
	gen_real		:= $37;

	// user gen list
	gen_bookmark	:= $00000054;

	// user reserved words

	tkn_unit		:= $56;
	tkn_program		:= $57;
	tkn_procedure		:= $58;
	tkn_proc		:= $59;
	tkn_iterator		:= $60;
	tkn_method		:= $61;
	tkn_begin		:= $62;
	tkn_end		:= $63;
	tkn_static		:= $64;
	tkn_const		:= $65;
	tkn_storage		:= $66;
	tkn_readonly		:= $67;
	tkn_macro		:= $68;
	tkn_type		:= $69;
	tkn_var		:= $70;
	tkn_val		:= $71;
	tkn_label		:= $72;
	tkn_endmacro		:= $73;
	tkn_record		:= $74;
	tkn_endrecord		:= $75;
	tkn_union		:= $76;
	tkn_endunion		:= $77;
	tkn_class		:= $78;
	tkn_endclass		:= $79;
	tkn_forward		:= $80;
	tkn_external		:= $81;
	tkn_include		:= $82;
	tkn_includeonce		:= $83;




	kw_if		:= $00000001;
	kw_elseif		:= $00000002;
	kw_else		:= $00000003;
	kw_while		:= $00000004;
	kw_repeat		:= $00000005;
	kw_forever		:= $00000006;
	kw_foreach		:= $00000007;
	kw_for		:= $00000008;
	kw_record		:= $00000009;
	kw_union		:= $0000000A;
	kw_static		:= $0000000B;
	kw_storage		:= $0000000C;
	kw_readonly		:= $0000000D;
	kw_const		:= $0000000E;
	kw_val		:= $0000000F;
	kw_var		:= $00000010;
	kw_type		:= $00000011;
	kw_class		:= $00000012;
	kw_proc		:= $00000013;
	kw_macro		:= $00000014;
	kw_unit		:= $00000015;
	kw_begin		:= $00000016;
	kw_program		:= $00000017;
	kw_end		:= $00000018;
	kw_method		:= $00000019;
	kw_procedure		:= $0000001A;
	kw_try		:= $0000001B;
	kw_exception		:= $0000001C;
	kw_anyexception		:= $0000001D;



	sa_program		:= $00000001;
	sa_modular		:= $00000002;
	sa_target		:= $00000003;
	sa_dll		:= $00000004;
	sa_library		:= $00000005;
	sa_miscjob		:= $00000006;
	sa_misc		:= $00000007;
	sa_hlaprogram		:= $00000008;
	sa_hlaunit		:= $00000009;
	sa_resource		:= $0000000A;
	sa_extlinked		:= $0000000B;
	sa_include		:= $0000000C;
	sa_def		:= $0000000D;
	sa_khelp		:= $0000000E;
	sa_kmake		:= $0000000F;
	sa_executable		:= $00000010;
	sa_binary		:= $00000011;


	endTknList	:= $00000055;


	genTkn_tc	:= 0;
	hla_tc	:= 2;

